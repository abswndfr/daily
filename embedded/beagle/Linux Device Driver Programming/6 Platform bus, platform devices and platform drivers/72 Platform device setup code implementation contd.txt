
So, now we have to initialize one more important member element in the platform_device.

That is, we have to initialize the release function.

In the platform_device structure, if you just go inside this device structure.

This is a big structure actually, and you see a release function here.

I think it is somewhere hidden here.

Here it is the release function. This is inside the device structure.

This release function has to be initialized.

What's a platform device release function?

Basically, it's a callback to free the device

after all references have gone away.

This should be set by the allocator of the device.

In your code, you have created the platform_devices here globally, isn't it?

These are global variables.

What if you have created them using some dynamic memory allocation APIs? Then you need a callback whenever

you remove that device from the system.Because, you want a place or you want an entry point where you

should release those memories or free

those memories.Basically, you need a callback function. For that purpose release is used.

Another example could be here

you have used platform data.

These are global variables, but what if it is allocated dynamically. That should be cleared or freed once

the device is removed.

You actually want a call back.

That's why, we have to initialize the release function.

So. basically it is in the dev structure.

I'm going to initialize here. First,

let's do it for the platform_device1, .release = I would just call it as pcdev_release.So, here as well.

Let's implement this release function.

Somewhere here, I would implement that pcdev_release.

This is a prototype of the release function.So, the input argument is a pointer to a device structure.

Here, we are not doing anything, so this is just a dummy function.

We are not read it doing anything here.

Because, we have got nothing to free here.

I just print "device released".

And from my previous exercise, I'm going to copy these macros, which is going to f ormat my output

messages.

After that, let me just keep some messages here.

pr_info("module inserted').

And I just write here

"device setup module removed".

Let's test this code.Let's build.

Insert the module.

So, you can see that, device setup module inserted, and let's try to remove this.Sorry.

So, the insertion and removal is OK, there is no problem, there is no crash detector.

That's good.

Let's insert once again.

And now let's go to sys/devices/platform. Because, we have added 2 platform devices. Let's check those

entries in this path /sys/devices/platform.

And you see here, 2 devices has been registered.

It shows two entries here.

If you remove that, those entries will disappear.

You can see that, a those entries have disappeared.

We are successful in adding the platform devices to the system.And in the next lecture, let's write

the platform_driver and I will see you in the next lecture.

