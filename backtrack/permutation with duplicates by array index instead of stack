N = 3
M = 2 
rs = [0] * M

def recur(num, d):
    if num == M:
        print(rs)
        return

    for i in range(1, N+1):
        rs[d] = i
        recur(num+1, d+1)

recur(0, 0)      # [1, 1] [1, 2]	[1, 3]	[2, 1]	[2, 2]	[2, 3]	[3, 1]	[3, 2]	[3, 3]

/*
https://herong.tistory.com/entry/CaseOfNumber-%EC%A1%B0%ED%95%A9-%EC%A4%91%EB%B3%B5%EC%A1%B0%ED%95%A9

import java.util.Arrays;

public class MyCombi {
    static int[] data = { 1,2,3,4 };
    static int[] res;
    static int cnt;

    public static void main(String[] args) {
        int N = 3, R = 2;
        res = new int[R];
        solve1(N, R, 0);
    }
    
    private static void solve1(int n, int r, int depth) {
        if (depth == r) {
            System.out.println(Arrays.toString(res));
            return;
        }

        for (int i = 0; i < n; i++) {
            res[depth] = data[i];
            solve1(n, r, depth + 1);
        }
    }
}
*/
