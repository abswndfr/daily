"""
                             r:2   
                             l:0, i:1       

a b c                          0    0            
        a,  b c                       l:  i:
                    a, b, c             1   1
                    a, c, b             1   2
        b,  a c                0    1    
                    b, a, c             1   1
                    b, c, a             1   2
        c,  b a                0    2    
                    c, b, a             1   1
                    c, a, b             1   2
w/ backtrack
    ['A', 'B', 'C']
    ['A', 'C', 'B']
    ['B', 'A', 'C']
    ['B', 'C', 'A']
    ['C', 'B', 'A']
    ['C', 'A', 'B']  

w/o backtrack
    ['A', 'B', 'C']
    ['A', 'C', 'B']
    ['C', 'A', 'B']
    ['C', 'B', 'A']
    ['A', 'B', 'C']
    ['A', 'C', 'B']
"""
# n: string length
# l: starting index
# r: ending index   (r-1)

def permute(a, l, n, r):
    if l == r:
        print(a[0:r])
    else:
        for i in range(l, n):
            a[i],a[l] = a[l],a[i]
            permute(a,l+1,n,r)
            a[i],a[l] = a[l],a[i]


string = "ABCD"
n = len(string)
a = list(string)
r = 3

permute(a, 0, n, r)
